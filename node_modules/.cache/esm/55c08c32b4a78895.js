let express,bodyParser,swaggerUi,swaggerDocument,anggotaRoutes,bukuRoutes,sequelize;_b4a‍.w("dotenv/config");_b4a‍.w("express",[["default",["express"],function(v){express=v}]]);_b4a‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_b4a‍.w("swagger-ui-express",[["default",["swaggerUi"],function(v){swaggerUi=v}]]);_b4a‍.w("../swagger/swagger.json",[["default",["swaggerDocument"],function(v){swaggerDocument=v}]]);_b4a‍.w("./routes/anggotaRoutes.js",[["default",["anggotaRoutes"],function(v){anggotaRoutes=v}]]);_b4a‍.w("./routes/bukuRoutes.js",[["default",["bukuRoutes"],function(v){bukuRoutes=v}]]);_b4a‍.w("./models/index.js",[["sequelize",["sequelize"],function(v){sequelize=v}]]);








const app = express();
const port = 3000;

app.use(bodyParser.json());
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));
app.use('/api/anggota', anggotaRoutes);
app.use('/api/buku', bukuRoutes);


app.listen(port, async () => {
  try {
    await sequelize.sync({ alter: true });
    console.log(`Server running at http://localhost:${port}`);
    console.log('Database synchronized');
  } catch (error) {
    _b4a‍.g.console.error('Unable to connect to the database:', error);
  }
});
